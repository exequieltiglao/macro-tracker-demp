name: Release Workflow

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., v1.0.0)'
        required: true
        default: 'v1.0.0'
      platform:
        description: 'Platform to release'
        required: true
        default: 'both'
        type: choice
        options:
          - both
          - android
          - ios

jobs:
  android-release:
    if: github.event_name == 'workflow_dispatch' && (inputs.platform == 'both' || inputs.platform == 'android') || github.event_name == 'push'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Install dependencies
        run: npm ci

      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Make gradlew executable
        run: chmod +x ./android/gradlew

      - name: Build Release APK
        run: |
          cd android
          ./gradlew assembleRelease

      - name: Sign APK (if keystore available)
        if: env.KEYSTORE_BASE64 != ''
        run: |
          echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 -d > keystore.jks
          jarsigner -verbose -sigalg SHA1withRSA -digestalg SHA1 -keystore keystore.jks android/app/build/outputs/apk/release/app-release-unsigned.apk ${{ secrets.KEYSTORE_ALIAS }}

      - name: Upload Android Release
        uses: softprops/action-gh-release@v1
        with:
          files: android/app/build/outputs/apk/release/app-release-unsigned.apk
          tag_name: ${{ github.event.inputs.version || github.ref_name }}
          name: Android Release ${{ github.event.inputs.version || github.ref_name }}
          body: |
            🚀 **Macro Tracker Demo - Android Release**

            **Version:** ${{ github.event.inputs.version || github.ref_name }}
            **Platform:** Android
            **Build Date:** ${{ github.event.head_commit.timestamp }}

            **Installation:**
            1. Download the APK file
            2. Enable "Install from unknown sources" on your Android device
            3. Install the APK

            **Features:**
            - 📸 Camera integration for food tracking
            - 📱 Barcode scanning
            - 📊 Macro tracking (calories, carbs, protein, fat)
            - 📈 Visual analytics and charts
            - 📝 Food history tracking
            - ⚙️ Profile management

            **Changes:**
            ${{ github.event.head_commit.message }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  ios-release:
    if: github.event_name == 'workflow_dispatch' && (inputs.platform == 'both' || inputs.platform == 'ios') || github.event_name == 'push'
    runs-on: macos-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable

      - name: Install dependencies
        run: npm ci

      - name: Install iOS dependencies
        run: |
          cd ios
          pod install --repo-update

      - name: Cache CocoaPods
        uses: actions/cache@v3
        with:
          path: ios/Pods
          key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-

      - name: Build iOS app
        run: |
          cd ios
          xcodebuild -workspace MacroTrackerDemo.xcworkspace \
                     -scheme MacroTrackerDemo \
                     -configuration Release \
                     -destination 'platform=iOS Simulator,name=iPhone 14' \
                     -derivedDataPath build \
                     build

      - name: Upload iOS Release
        uses: softprops/action-gh-release@v1
        with:
          files: ios/build/Build/Products/Release-iphonesimulator/MacroTrackerDemo.app
          tag_name: ${{ github.event.inputs.version || github.ref_name }}
          name: iOS Release ${{ github.event.inputs.version || github.ref_name }}
          body: |
            🚀 **Macro Tracker Demo - iOS Release**

            **Version:** ${{ github.event.inputs.version || github.ref_name }}
            **Platform:** iOS
            **Build Date:** ${{ github.event.head_commit.timestamp }}

            **Installation:**
            1. Download the app file
            2. Install via Xcode or TestFlight (if configured)

            **Features:**
            - 📸 Camera integration for food tracking
            - 📱 Barcode scanning
            - 📊 Macro tracking (calories, carbs, protein, fat)
            - 📈 Visual analytics and charts
            - 📝 Food history tracking
            - ⚙️ Profile management

            **Changes:**
            ${{ github.event.head_commit.message }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
